\input texinfo @c -*-texinfo-*-
@c %**start of header
@setfilename permute.info
@include version.texi
@settitle GNU Permute @value{VERSION}

@c Define a new index for options.
@defcodeindex op
@c Combine everything into one index (arbitrarily chosen to be the
@c concept index).
@syncodeindex op cp
@c %**end of header

@copying
Copyright @copyright{} 2025 John Kuras

@quotation
This is free and unencumbered software released into the public domain.

Anyone is free to copy, modify, publish, use, compile, sell, or
distribute this software, either in source code form or as a compiled
binary, for any purpose, commercial or non-commercial, and by any
means.

In jurisdictions that recognize copyright laws, the author or authors
of this software dedicate any and all copyright interest in the
software to the public domain. We make this dedication for the benefit
of the public at large and to the detriment of our heirs and
successors. We intend this dedication to be an overt act of
relinquishment in perpetuity of all present and future rights to this
software under copyright law.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR
OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
OTHER DEALINGS IN THE SOFTWARE.

For more information, please refer to <https://unlicense.org>
@end quotation
@end copying
@c If your manual is published on paper by the FSF, it should include
@c the standard FSF Front-Cover and Back-Cover Texts, as given in
@c maintain.texi.

@dircategory Math
@direntry
* Permute: (permute).               Finds the permutations of a string.
@end direntry

@titlepage
@title Permute
@subtitle for version @value{VERSION}, @value{UPDATED}
@author John Kuras (@email{w7og@@yahoo.com})
@page
@vskip 0pt plus 1filll
@insertcopying
@end titlepage

@contents


@ifnottex
@node Top
@top Permute

This manual is for Permute (version @value{VERSION}, @value{UPDATED}),
which prints every permutation of a string provided by the user.
@end ifnottex

@menu
* Overview::		General purpose and information.
* Sample output::	Sample output from @command{permute}.
* Invoking permute::	How to run @command{permute}.
* Reporting bugs::	Sending bug reports and feature suggestions.
* Free Documentation License:: Copying and sharing the application documentation.
* Concept index::	Index of concepts.
@end menu


@node Overview
@chapter Overview

@cindex greetings
@cindex overview

The @command{permute} program finds the permutations of the characters
contained in a string.
It allows non-mathematicians to use a classic computer
algorithm which is useful in probability and game theory simulations.

@cindex joke, not
Not to spoil the joke, but of course the practical purpose of
@command{permute} is to serve as a tool that can be used to cheat at certain word
puzzles. (see examples)

@cindex author
@cindex Kuras, John
Permute was written by @w{dad} (John Kuras)

@node Sample output
@chapter Sample output

@cindex sample output
@cindex examples

Here are some examples of running Permute.

This is the output of the command @samp{permute -m 3 ABC}:

@example
 finding all of the permutations of ABC that are more than 2 characters long
ABC
ACB
BAC
BCA
CBA
CAB
@end example

The characters contained in the input string are not checked for duplicates.
Thus, if two identical characters are in the string, the algorithm will treat
each instance of the character as a separate member of the set. This will result
in duplicate words in the output:
This is the output of the command @samp{permute -m 3 ABA}:

@example
 finding all of the permutations of ABA that are more than 2 characters long
ABA
AAB
BAA
BAA
ABA
AAB
@end example

If such behavior is undesirable, the output may be piped through the unix sort
and uniq commands. In addition, the header line that permute outputs is written 
to stderr. Thus, it can be eliminated by redirecting stderr:
This is the output of the command @samp{permute ABA -m 3 2>/dev/null | sort | uniq}:

@example
AAB
ABA
BAA
@end example

@cindex word game cheat

If you are only interested in character permutations that form words contained
in your default language, you may spell check the results:
This is the output of the command @samp{permute FFERO |sort|uniq>in.txt ; comm -23 in.txt <(aspell list < in.txt) 2>/dev/null}:

@example
 finding all of the permutations of FFERO that are more than 2 characters long
EFF
FER
FOE
FOR
FORE
FRO
OFF
OFFER
ORE
REF
ROE
@end example


@node Invoking permute
@chapter Invoking @command{permute}

@cindex invoking
@cindex options
@cindex usage
@cindex help

The format for running the @command{permute} program is:

@example
permute [@var{option}] @dots{} [ARGUMENT]
@end example

With no options or argument, @command{permute} prints the the permutations of the
string @samp{ADOB} that are 3 or more characters long.

@command{permute} supports the following options:

@table @option
@item --min-word-size=@var{N}
@itemx -m @var{N}
@opindex --min-word-size
@opindex -m
Ignore all outputs that are less than @var{N} characters in length (default 3).

@item --max-word-size=@var{N}
@itemx -x @var{N}
@opindex --max-word-size
@opindex -x
Ignore all outputs that are greater than @var{N} characters in length (default is the
length of the string).

@item --help
@itemx -?
@opindex --help
@opindex -?
Print an informative help message on standard output and exit
successfully.

@item --version
@itemx -v
@opindex --version
@opindex -v
Print the version number and licensing information of Permute on
standard output and then exit successfully.

@item ARGUMENT
@opindex ARGUMENT
@command{permute} takes one (optional) argument: the string of characters
to be permuted. The string may contain any printable ASCII character.

@end table

Notes:

The number of permutations of the characters in the string (i.e., the
number of lines of output) is O(n!), where n is the number of characters in the
string). Thus, the size of the output grows quickly with increasing string length.
There is a hard coded limit on the length of the input string of 15 characters.
On an Intel i5 processor from 2016, it takes permute 34 cpu seconds and 35 seconds wall
time to find the permutations of a 12 character string. This implies that it would take about 27
hours to find the permutations of a length 15 string. If a user should need to
use longer strings, download the source and change the definition of MAXSETSIZE.

The application is not multi-threaded. However, the computation in the algorithm
is roughly equivalent to the cpu time required to do the output. Therefore, large
problems will likely fully utilize the equivalent of two cores.

The memory requirement for the algorithm is roughly O(n**2)/2, where n is the length
of the string. Thus, even for a
string of length 15, it should require no where near the amount of RAM installed in
modern systems.

If duplicate numerical options (@option{-m},
@option{-x}, and their long-named equivalents) are specified, whichever
comes last takes precedence. If both @option{-?} and @option{-v} (or their long-named equivalents)
are specified, whichever comes first takes precedence.

@node Reporting bugs
@chapter Reporting bugs

@cindex bug reporting
@cindex problems
@cindex reporting bugs

To report bugs, suggest enhancements or otherwise discuss Permute,
please send electronic mail to @email{w7og@@yahoo.com}.

@cindex checklist for bug reports
For bug reports, please include enough information for the maintainers
to reproduce the problem.  Generally speaking, that means:

@itemize @bullet
@item The version numbers of Permute (which you can find by running
      @w{@samp{permute --version}}) and any other program(s) or
      file(s) involved.
@item Hardware and operating system names and versions.
@item The contents of any input files necessary to reproduce the bug.
@item The expected behavior and/or output.
@item A description of the problem and samples of any erroneous output.
@item If you compiled it yourself, any Options you gave to @command{configure} other than specifying installation directories.
@item Anything else that you think would be helpful.
@end itemize

When in doubt whether something is needed or not, include it.  It's
better to include too much than to leave out something important.

@cindex patches, contributing
Patches are welcome; if possible, please make them with @samp{@w{diff -c}}
and include @file{ChangeLog} entries.  Please follow the existing
coding style.


@node Free Documentation License
@appendix Permute Free Documentation License

@quotation
Note: Some of the C source in the permute application is based on AI
generated code. As of 2025, the copyright law regarding AI code is
being litigated. Should the law change, the copyright of the source
and the license that follows may become invalid.

This is free and unencumbered software released into the public domain.

Anyone is free to copy, modify, publish, use, compile, sell, or
distribute this software, either in source code form or as a compiled
binary, for any purpose, commercial or non-commercial, and by any
means.

In jurisdictions that recognize copyright laws, the author or authors
of this software dedicate any and all copyright interest in the
software to the public domain. We make this dedication for the benefit
of the public at large and to the detriment of our heirs and
successors. We intend this dedication to be an overt act of
relinquishment in perpetuity of all present and future rights to this
software under copyright law.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR
OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,
ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
OTHER DEALINGS IN THE SOFTWARE.

For more information, please refer to <https://unlicense.org>
@end quotation


@node Concept index
@unnumbered Concept index

@printindex cp

@bye
